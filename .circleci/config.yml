version: 2.1

orbs:
  python: circleci/python@1.2
  coveralls: coveralls/coveralls@1.0.6

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.9
    parallelism: 4  # Run 4 containers in parallel
    resource_class: large  # Optional: Change the resource size for larger workloads
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: additional pip install
          command: |
            pip install pytest pytest-mpl coveralls
      - run:
          name: doc install
          command: |
            pip install mkdocs-awesome-pages-plugin pheasant mkdocstrings mkdocs-material
      - run:
          name: install netplotbrain
          command: |
            pip install ./
      - run:
          name: Run pytest tests in parallel
          command: |
            pytest $(circleci tests glob "tests/**/*.py" | circleci tests split --split-by=timings) --mpl --mpl-results-path=pytest_images
      - run:
          name: Copy results to workspace
          command: |
            mkdir -p /workspace/pytest_images
            cp -r pytest_images/*/*.png /workspace/pytest_images/
      - run:
          name: Copy baseline images to workspace
          command: |
            mkdir -p /workspace/baseline_images
            cp -r tests/baseline/* /workspace/baseline_images/
      - persist_to_workspace:
          root: /workspace
          paths:
            - pytest_images
            - baseline_images

  store-artifacts:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - attach_workspace:
          at: /workspace
      - run:
          name: Store Artifacts
          command: |
            echo "Storing artifacts from workspace"
      - store_artifacts:
          path: /workspace/baseline_images
          destination: baseline_images
      - store_artifacts:
          path: /workspace/pytest_images
          destination: pytest_images

workflows:
  sample:
    jobs:
      - build-and-test
      - store-artifacts:
          requires:
            - build-and-test
          filters:
            branches:
              only: master
          allow_failure: true  # Ensure it runs even if the build-and-test fails
